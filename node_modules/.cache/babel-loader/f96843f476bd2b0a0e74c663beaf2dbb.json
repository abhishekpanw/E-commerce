{"ast":null,"code":"var _jsxFileName = \"/home/cqlnode/Documents/ADMIn/src/pages/Categories/Listing/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Card, CardBody, Button, Label, Container } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeUserStatus, deleteUser, getUsers, toggleModal, setModalType, setUser } from \"../../../store/user/actions\";\nimport DataTable from \"react-data-table-component\";\nimport AddCategory from \"../AddCategory\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport FilterComponent from \"../../../components/DataTables/FilterComponent\";\nimport CustomLoader from \"../../../components/DataTables/CustomLoader\";\nimport Columns from \"./Columns\";\nimport ConfirmDelete from \"../../../components/DataTables/ConfirmDelete\";\nimport { getCategories, setCategory } from \"../../../store/category/actions\";\nimport { changeStatus, deleteEntry } from \"../../../store/common/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Category = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [filterText, setFilterText] = useState(\"\");\n  const [currentPage, setcurrentPage] = useState();\n  const [perPage, setPerPage] = useState(10); // PAGINATION\n  //   const handlePageChange = (page) => {\n  //     setcurrentPage(page);\n  //     dispatch(getUsers(page, perPage));\n  //   };\n  //   const handlePerRowsChange = async (newPerPage, page) => {\n  //     dispatch(getUsers(page, newPerPage));\n  //   };\n\n  const handleChangeStatus = (id, status) => {\n    console.log(\"ID\", id);\n    console.log(\"HANDLE CHANGE STATUS\", status);\n    dispatch(changeStatus(id, status, 'category'));\n  };\n\n  const editPopup = id => {\n    dispatch(toggleModal());\n    dispatch(setModalType(\"edit\"));\n    dispatch(setCategory(state.category.categories.find(u => u._id == id)));\n  };\n\n  const handleDelete = id => {\n    setDeletePopup(true);\n    setDeleteId(id);\n  };\n\n  const confirmDelete = () => {\n    dispatch(deleteEntry(deleteId, setDeletePopup, 'category'));\n  };\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(FilterComponent, {\n      onFilter: e => setFilterText(e.target.value),\n      filterText: filterText,\n      dispatch: dispatch,\n      title: \"Add Category\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }, [filterText]);\n  useEffect(() => {\n    // if (filterText) {\n    //   dispatch(getUsers(1, perPage, filterText));\n    // } else {\n    //   // alert(currentPage);\n    //   dispatch(getUsers(1, perPage));\n    // }\n    dispatch(getCategories());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [deletePopup && /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n      loading: state.alert.loading,\n      confirmDelete: confirmDelete,\n      setDeletePopup: setDeletePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddCategory, {\n      modal: state.user.isModalOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n              title: \"Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n              columns: Columns(handleChangeStatus, handleDelete, editPopup),\n              data: state.category.categories,\n              pagination: true,\n              subHeader: true,\n              subHeaderComponent: subHeaderComponentMemo,\n              progressPending: state.alert.loading,\n              progressComponent: /*#__PURE__*/_jsxDEV(CustomLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 36\n              }, this) // paginationServer\n              ,\n              paginationTotalRows: state.category.categories.length // onChangeRowsPerPage={handlePerRowsChange}\n              // onChangePage={handlePageChange}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Category, \"T3YJY/OqVx1v6SFDl1Dvv/h5Tw4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/home/cqlnode/Documents/ADMIn/src/pages/Categories/Listing/index.jsx"],"names":["React","useState","useEffect","Row","Col","Card","CardBody","Button","Label","Container","useDispatch","useSelector","changeUserStatus","deleteUser","getUsers","toggleModal","setModalType","setUser","DataTable","AddCategory","Breadcrumbs","FilterComponent","CustomLoader","Columns","ConfirmDelete","getCategories","setCategory","changeStatus","deleteEntry","Category","dispatch","state","deletePopup","setDeletePopup","deleteId","setDeleteId","filterText","setFilterText","currentPage","setcurrentPage","perPage","setPerPage","handleChangeStatus","id","status","console","log","editPopup","category","categories","find","u","_id","handleDelete","confirmDelete","subHeaderComponentMemo","useMemo","e","target","value","alert","loading","user","isModalOpen","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Card, CardBody, Button, Label, Container } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  changeUserStatus,\n  deleteUser,\n  getUsers,\n  toggleModal,\n  setModalType,\n  setUser,\n} from \"../../../store/user/actions\";\n\nimport DataTable from \"react-data-table-component\";\n\nimport AddCategory from \"../AddCategory\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport FilterComponent from \"../../../components/DataTables/FilterComponent\";\nimport CustomLoader from \"../../../components/DataTables/CustomLoader\";\nimport Columns from \"./Columns\";\nimport ConfirmDelete from \"../../../components/DataTables/ConfirmDelete\";\nimport { getCategories, setCategory } from \"../../../store/category/actions\";\nimport { changeStatus, deleteEntry } from \"../../../store/common/actions\";\n\n\n\n\nconst Category = () => {\n\n\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [filterText, setFilterText] = useState(\"\");\n  const [currentPage, setcurrentPage] = useState();\n  const [perPage, setPerPage] = useState(10);\n\n\n  // PAGINATION\n//   const handlePageChange = (page) => {\n//     setcurrentPage(page);\n//     dispatch(getUsers(page, perPage));\n//   };\n\n//   const handlePerRowsChange = async (newPerPage, page) => {\n//     dispatch(getUsers(page, newPerPage));\n//   };\n\n\n\n  const handleChangeStatus = (id, status) => {\n    console.log(\"ID\", id);\n    console.log(\"HANDLE CHANGE STATUS\", status);\n    dispatch(changeStatus(id, status,'category'));\n  };\n\n   \n  const editPopup = (id) => {\n    dispatch(toggleModal());\n    dispatch(setModalType(\"edit\"));\n    dispatch(setCategory(state.category.categories.find((u) => u._id == id)));\n  };\n\n\n  const handleDelete = (id) => {\n\n    setDeletePopup(true);\n    setDeleteId(id);\n\n  };\n\n  const confirmDelete = () => {\n    dispatch(deleteEntry(deleteId, setDeletePopup, 'category'));\n  };\n\n\n \n  const subHeaderComponentMemo = React.useMemo(() => {\n \n    return (\n      <FilterComponent\n        onFilter={(e) => setFilterText(e.target.value)}\n        filterText={filterText}\n        dispatch={dispatch}\n        title=\"Add Category\"\n      />\n    );\n  }, [filterText]);\n\n\n  useEffect(() => {\n\n    // if (filterText) {\n    //   dispatch(getUsers(1, perPage, filterText));\n    // } else {\n    //   // alert(currentPage);\n    //   dispatch(getUsers(1, perPage));\n    // }\n    dispatch(getCategories())\n\n  }, []);\n\n \n  return (\n    <>\n      {deletePopup && (\n        <ConfirmDelete loading={state.alert.loading} confirmDelete={confirmDelete} setDeletePopup={setDeletePopup}/>\n      )}\n      <AddCategory modal={state.user.isModalOpen} />\n      <div className=\"page-content\">\n        <Container fluid>\n          <Row>\n            <Col xs={12}>\n              <Breadcrumbs title=\"Categories\" />\n              <DataTable\n                columns={Columns(handleChangeStatus,handleDelete,editPopup)}\n                data={state.category.categories}\n                pagination\n                subHeader\n                subHeaderComponent={subHeaderComponentMemo}\n                progressPending={state.alert.loading}\n                progressComponent={<CustomLoader />}\n                // paginationServer\n                paginationTotalRows={state.category.categories.length}\n                // onChangeRowsPerPage={handlePerRowsChange}\n                // onChangePage={handlePageChange}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}