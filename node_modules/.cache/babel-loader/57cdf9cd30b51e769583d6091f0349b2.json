{"ast":null,"code":"import { call, put, takeEvery } from \"redux-saga/effects\"; // Ecommerce Redux States\n\nimport { GET_CART_DATA, GET_CUSTOMERS, GET_ORDERS, GET_PRODUCT_DETAIL, GET_PRODUCTS, GET_SHOPS } from \"./actionTypes\";\nimport { getCartDataFail, getCartDataSuccess, getCustomersFail, getCustomersSuccess, getOrdersFail, getOrdersSuccess, getProductDetailFail, getProductDetailSuccess, getProductsFail, getProductsSuccess, getShopsFail, getShopsSuccess } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getCartData, getCustomers, getOrders, getProducts, getShops, getProductDetail } from \"../../helpers/fackBackend_Helper\";\n\nfunction* fetchProducts() {\n  try {\n    const response = yield call(getProducts);\n    yield put(getProductsSuccess(response));\n  } catch (error) {\n    yield put(getProductsFail(error));\n  }\n}\n\nfunction* fetchProductDetail({\n  productId\n}) {\n  try {\n    const response = yield call(getProductDetail, productId);\n    yield put(getProductDetailSuccess(response));\n  } catch (error) {\n    yield put(getProductDetailFail(error));\n  }\n}\n\nfunction* fetchOrders() {\n  try {\n    const response = yield call(getOrders);\n    yield put(getOrdersSuccess(response));\n  } catch (error) {\n    yield put(getOrdersFail(error));\n  }\n}\n\nfunction* fetchCartData() {\n  try {\n    const response = yield call(getCartData);\n    yield put(getCartDataSuccess(response));\n  } catch (error) {\n    yield put(getCartDataFail(error));\n  }\n}\n\nfunction* fetchCustomers() {\n  try {\n    const response = yield call(getCustomers);\n    yield put(getCustomersSuccess(response));\n  } catch (error) {\n    yield put(getCustomersFail(error));\n  }\n}\n\nfunction* fetchShops() {\n  try {\n    const response = yield call(getShops);\n    yield put(getShopsSuccess(response));\n  } catch (error) {\n    yield put(getShopsFail(error));\n  }\n}\n\nfunction* ecommerceSaga() {\n  yield takeEvery(GET_PRODUCTS, fetchProducts);\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail);\n  yield takeEvery(GET_ORDERS, fetchOrders);\n  yield takeEvery(GET_CART_DATA, fetchCartData);\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers);\n  yield takeEvery(GET_SHOPS, fetchShops);\n}\n\nexport default ecommerceSaga;","map":{"version":3,"sources":["/home/cqlnode/Documents/ADMIn/src/store/e-commerce/saga.js"],"names":["call","put","takeEvery","GET_CART_DATA","GET_CUSTOMERS","GET_ORDERS","GET_PRODUCT_DETAIL","GET_PRODUCTS","GET_SHOPS","getCartDataFail","getCartDataSuccess","getCustomersFail","getCustomersSuccess","getOrdersFail","getOrdersSuccess","getProductDetailFail","getProductDetailSuccess","getProductsFail","getProductsSuccess","getShopsFail","getShopsSuccess","getCartData","getCustomers","getOrders","getProducts","getShops","getProductDetail","fetchProducts","response","error","fetchProductDetail","productId","fetchOrders","fetchCartData","fetchCustomers","fetchShops","ecommerceSaga"],"mappings":"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","sourcesContent":["import { call, put, takeEvery } from \"redux-saga/effects\"\n\n// Ecommerce Redux States\nimport {\n  GET_CART_DATA,\n  GET_CUSTOMERS,\n  GET_ORDERS,\n  GET_PRODUCT_DETAIL,\n  GET_PRODUCTS,\n  GET_SHOPS,\n} from \"./actionTypes\"\nimport {\n  getCartDataFail,\n  getCartDataSuccess,\n  getCustomersFail,\n  getCustomersSuccess,\n  getOrdersFail,\n  getOrdersSuccess,\n  getProductDetailFail,\n  getProductDetailSuccess,\n  getProductsFail,\n  getProductsSuccess,\n  getShopsFail,\n  getShopsSuccess,\n} from \"./actions\"\n\n//Include Both Helper File with needed methods\nimport {\n  getCartData,\n  getCustomers,\n  getOrders,\n  getProducts,\n  getShops,\n  getProductDetail,\n} from \"../../helpers/fackBackend_Helper\"\n\nfunction* fetchProducts() {\n  try {\n    const response = yield call(getProducts)\n    yield put(getProductsSuccess(response))\n  } catch (error) {\n    yield put(getProductsFail(error))\n  }\n}\n\nfunction* fetchProductDetail({ productId }) {\n  try {\n    const response = yield call(getProductDetail, productId)\n    yield put(getProductDetailSuccess(response))\n  } catch (error) {\n    yield put(getProductDetailFail(error))\n  }\n}\n\nfunction* fetchOrders() {\n  try {\n    const response = yield call(getOrders)\n    yield put(getOrdersSuccess(response))\n  } catch (error) {\n    yield put(getOrdersFail(error))\n  }\n}\n\nfunction* fetchCartData() {\n  try {\n    const response = yield call(getCartData)\n    yield put(getCartDataSuccess(response))\n  } catch (error) {\n    yield put(getCartDataFail(error))\n  }\n}\n\nfunction* fetchCustomers() {\n  try {\n    const response = yield call(getCustomers)\n    yield put(getCustomersSuccess(response))\n  } catch (error) {\n    yield put(getCustomersFail(error))\n  }\n}\n\nfunction* fetchShops() {\n  try {\n    const response = yield call(getShops)\n    yield put(getShopsSuccess(response))\n  } catch (error) {\n    yield put(getShopsFail(error))\n  }\n}\n\nfunction* ecommerceSaga() {\n  yield takeEvery(GET_PRODUCTS, fetchProducts)\n  yield takeEvery(GET_PRODUCT_DETAIL, fetchProductDetail)\n  yield takeEvery(GET_ORDERS, fetchOrders)\n  yield takeEvery(GET_CART_DATA, fetchCartData)\n  yield takeEvery(GET_CUSTOMERS, fetchCustomers)\n  yield takeEvery(GET_SHOPS, fetchShops)\n}\n\nexport default ecommerceSaga\n"]},"metadata":{},"sourceType":"module"}