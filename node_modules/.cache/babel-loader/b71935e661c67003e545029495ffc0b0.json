{"ast":null,"code":"import * as actionType from \"./actionTypes\";\nimport axios from \"axios\";\nimport { setError, setLoading, setSuccess, clearAlerts } from \"../alerts/actions\";\n\nconst addCategoryStart = () => ({\n  type: actionType.ADD_CATEGORY_START\n});\n\nconst addCategorySuccess = data => ({\n  type: actionType.ADD_CATEGORY_SUCCESS,\n  payload: data\n});\n\nconst addCategoryFailed = data => ({\n  type: actionType.ADD_CATEGORY_FAILED,\n  payload: data\n});\n\nexport const clearCategory = () => ({\n  type: actionType.CLEAR_CATEGORY\n});\n\nconst setCategories = data => ({\n  type: actionType.SET_CATEGORIES,\n  payload: data\n});\n\nexport const setCategory = data => ({\n  type: actionType.SET_CATEGORY,\n  payload: data\n});\nexport const setModalType = data => ({\n  type: actionType.SET_MODAL_TYPE,\n  payload: data\n});\nexport const toggleModal = () => ({\n  type: actionType.TOGGLE_MODAL\n});\nexport const getCategories = (page, perPage, filterText = '') => {\n  return dispatch => {\n    // dispatch(clearAlerts());\n    dispatch(setLoading(true));\n    axios // .get(`api/users?page=${page}&perPage=${perPage}&search=${filterText}`)\n    .get(`api/category`).then(res => {\n      console.log(\"CATEGORIES_______________\", res.data);\n      dispatch(setCategories(res.data.body.categories));\n      dispatch(setLoading(false));\n      console.log(\"RES\", res);\n    }).catch(err => {\n      dispatch(setLoading(false));\n      dispatch(setError(err.response.data.message));\n      console.log(err);\n    });\n  };\n};\nexport const addCategory = (data, clearInputs, toggle) => {\n  console.log(data);\n  return dispatch => {\n    // dispatch(clearAlerts());\n    dispatch(addCategoryStart());\n    axios.post(\"api/category\", data).then(res => {\n      dispatch(addCategorySuccess());\n      clearInputs();\n      dispatch(toggleModal());\n      dispatch(getCategories());\n      dispatch(setSuccess(res.data.message)); // history.push(\"users\");\n    }).catch(err => {\n      dispatch(addCategoryFailed(err.response.data.message));\n      console.log(err);\n    });\n  };\n};\nexport const updateCategory = (id, data, clearInputs) => {\n  console.log(data);\n  return dispatch => {\n    // dispatch(clearAlerts());\n    dispatch(addCategoryStart());\n    axios.patch(`api/category/${id}`, data).then(res => {\n      dispatch(addCategorySuccess());\n      dispatch(toggleModal());\n      dispatch(getCategories());\n      dispatch(setSuccess(res.data.message)); // history.push(\"users\");\n    }).catch(err => {\n      dispatch(setError(err.response.data.message));\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/home/cqlnode/Documents/ADMIn/src/store/category/actions.js"],"names":["actionType","axios","setError","setLoading","setSuccess","clearAlerts","addCategoryStart","type","ADD_CATEGORY_START","addCategorySuccess","data","ADD_CATEGORY_SUCCESS","payload","addCategoryFailed","ADD_CATEGORY_FAILED","clearCategory","CLEAR_CATEGORY","setCategories","SET_CATEGORIES","setCategory","SET_CATEGORY","setModalType","SET_MODAL_TYPE","toggleModal","TOGGLE_MODAL","getCategories","page","perPage","filterText","dispatch","get","then","res","console","log","body","categories","catch","err","response","message","addCategory","clearInputs","toggle","post","updateCategory","id","patch"],"mappings":"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","sourcesContent":["import * as actionType from \"./actionTypes\";\nimport axios from \"axios\";\nimport {\n  setError,\n  setLoading,\n  setSuccess,\n  clearAlerts,\n} from \"../alerts/actions\";\n\nconst addCategoryStart = () => ({\n  type: actionType.ADD_CATEGORY_START,\n});\n\nconst addCategorySuccess = (data) => ({\n  type: actionType.ADD_CATEGORY_SUCCESS,\n  payload: data,\n});\n\nconst addCategoryFailed = (data) => ({\n  type: actionType.ADD_CATEGORY_FAILED,\n  payload: data,\n});\n\nexport const clearCategory = () => ({\n  type: actionType.CLEAR_CATEGORY,\n});\n\nconst setCategories = (data) => ({\n  type: actionType.SET_CATEGORIES,\n  payload: data,\n});\n\nexport const setCategory = (data) => ({\n  type: actionType.SET_CATEGORY,\n  payload: data,\n});\n\nexport const setModalType = (data) => ({\n  type: actionType.SET_MODAL_TYPE,\n  payload: data\n})\n\nexport const toggleModal = () => ({\n  type: actionType.TOGGLE_MODAL,\n})\n\nexport const getCategories = (page,perPage, filterText = '') => {\n\n  return (dispatch) => {\n    // dispatch(clearAlerts());\n    dispatch(setLoading(true));\n  \n    axios\n      // .get(`api/users?page=${page}&perPage=${perPage}&search=${filterText}`)\n      .get(`api/category`)\n      .then((res) => {\n        console.log(\"CATEGORIES_______________\",res.data)\n        dispatch(setCategories(res.data.body.categories));\n        dispatch(setLoading(false));\n\n\n        console.log(\"RES\", res);\n      })\n      .catch((err) => {\n        dispatch(setLoading(false));\n        dispatch(setError(err.response.data.message));\n        console.log(err);\n      });\n  };\n};\n\nexport const addCategory = (data, clearInputs, toggle) => {\n  console.log(data);\n  return (dispatch) => {\n\n    // dispatch(clearAlerts());\n    dispatch(addCategoryStart());\n\n    axios\n      .post(\"api/category\", data)\n      .then((res) => {\n        dispatch(addCategorySuccess());\n        clearInputs()\n        dispatch(toggleModal());        \n        dispatch(getCategories());\n        dispatch(setSuccess(res.data.message));\n        // history.push(\"users\");\n      })\n      .catch((err) => {\n        dispatch(addCategoryFailed(err.response.data.message));\n        console.log(err);\n      });\n  };\n};\n\nexport const updateCategory = (id,data, clearInputs) => {\n\n  console.log(data);\n  return (dispatch) => {\n\n    // dispatch(clearAlerts());\n    dispatch(addCategoryStart());\n\n    axios\n      .patch(`api/category/${id}`, data)\n      .then((res) => {\n        dispatch(addCategorySuccess());\n        dispatch(toggleModal());        \n        dispatch(getCategories());\n        dispatch(setSuccess(res.data.message));\n\n        // history.push(\"users\");\n      })\n      .catch((err) => {\n\n        dispatch(setError(err.response.data.message))\n        console.log(err);\n      });\n\n  };\n};\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}