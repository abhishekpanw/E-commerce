{"ast":null,"code":"import axios from \"axios\";\nimport { clearAlerts, setError, setLoading, setSuccess } from \"../alerts/actions\";\nimport { getCategories, clearCategory } from \"../category/actions\";\nimport { getProducts, clearProduct } from \"../product/actions\";\nexport const changeStatus = (id, status, moduleName) => {\n  console.log(status);\n  const fd = new FormData();\n  fd.append(\"status\", status);\n  return dispatch => {\n    dispatch(clearCategory());\n    dispatch(clearProduct());\n    dispatch(clearAlerts());\n    axios.patch(`api/${moduleName}/${id}`, fd).then(res => {\n      dispatch(setSuccess(res.data.message));\n      console.log(\"RES\", res); // dispatch(getUsers());\n    }).catch(err => {\n      dispatch(setError(err.response.data.message));\n      console.log(err);\n    });\n  };\n};\nexport const deleteEntry = (id, setDeletePopup, moduleName, currentPage, perPage) => {\n  return dispatch => {\n    dispatch(clearAlerts());\n    dispatch(setLoading(true));\n    axios.delete(`api/${moduleName}/${id}`).then(res => {\n      console.log(\"RES\", res);\n\n      if (moduleName == 'product') {\n        dispatch(getProducts(currentPage, perPage));\n      }\n\n      if (moduleName == 'category') {\n        dispatch(getCategories());\n      }\n\n      setDeletePopup(false);\n      setTimeout(() => {\n        dispatch(setSuccess(res.data.message));\n      }, 1000);\n    }).catch(err => {\n      dispatch(setError(err.response.data.message));\n      console.log(err);\n    });\n  };\n}; //   export const deleteEntry = (id, setDeletePopup,currentPage, perPage) => {\n//     return (dispatch) => {\n//       dispatch(clearAlerts());\n//       dispatch(setLoading(true));\n//       axios\n//         .delete(`api/user/${id}`)\n//         .then((res) => {\n//           dispatch(setSuccess(res.data.message));\n//           console.log(\"RES\", res);\n//           dispatch(getUsers(currentPage,perPage));\n//           setDeletePopup(false);\n//         })\n//         .catch((err) => {\n//           dispatch(setError(err.response.data.message));\n//           console.log(err);\n//         });\n//     };\n//   };","map":{"version":3,"sources":["/home/cqlnode/Documents/ADMIn/src/store/common/actions.js"],"names":["axios","clearAlerts","setError","setLoading","setSuccess","getCategories","clearCategory","getProducts","clearProduct","changeStatus","id","status","moduleName","console","log","fd","FormData","append","dispatch","patch","then","res","data","message","catch","err","response","deleteEntry","setDeletePopup","currentPage","perPage","delete","setTimeout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,UAAhC,EAA4CC,UAA5C,QAA8D,mBAA9D;AACA,SAASC,aAAT,EAAuBC,aAAvB,QAA4C,qBAA5C;AACA,SAASC,WAAT,EAAqBC,YAArB,QAAyC,oBAAzC;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,EAAD,EAAKC,MAAL,EAAaC,UAAb,KAA4B;AAEpDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AAEA,QAAMI,EAAE,GAAG,IAAIC,QAAJ,EAAX;AACAD,EAAAA,EAAE,CAACE,MAAH,CAAU,QAAV,EAAoBN,MAApB;AAEA,SAAQO,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACZ,aAAa,EAAd,CAAR;AACAY,IAAAA,QAAQ,CAACV,YAAY,EAAb,CAAR;AACAU,IAAAA,QAAQ,CAACjB,WAAW,EAAZ,CAAR;AACAD,IAAAA,KAAK,CACFmB,KADH,CACU,OAAMP,UAAW,IAAGF,EAAG,EADjC,EACoCK,EADpC,EAEGK,IAFH,CAESC,GAAD,IAAS;AACbH,MAAAA,QAAQ,CAACd,UAAU,CAACiB,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAX,CAAR;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBO,GAAnB,EAFa,CAGb;AACD,KANH,EAOGG,KAPH,CAOUC,GAAD,IAAS;AACdP,MAAAA,QAAQ,CAAChB,QAAQ,CAACuB,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBC,OAAnB,CAAT,CAAR;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACD,KAVH;AAWD,GAfD;AAgBD,CAvBI;AAyBL,OAAO,MAAME,WAAW,GAAG,CAACjB,EAAD,EAAKkB,cAAL,EAAqBhB,UAArB,EAAgCiB,WAAhC,EAA4CC,OAA5C,KAAwD;AACjF,SAAQZ,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACjB,WAAW,EAAZ,CAAR;AACAiB,IAAAA,QAAQ,CAACf,UAAU,CAAC,IAAD,CAAX,CAAR;AACAH,IAAAA,KAAK,CACF+B,MADH,CACW,OAAMnB,UAAW,IAAGF,EAAG,EADlC,EAEGU,IAFH,CAESC,GAAD,IAAS;AAEbR,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBO,GAAnB;;AAGA,UAAGT,UAAU,IAAI,SAAjB,EAA2B;AACzBM,QAAAA,QAAQ,CAACX,WAAW,CAACsB,WAAD,EAAaC,OAAb,CAAZ,CAAR;AACD;;AACD,UAAGlB,UAAU,IAAI,UAAjB,EAA4B;AAC1BM,QAAAA,QAAQ,CAACb,aAAa,EAAd,CAAR;AACD;;AACDuB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAI,MAAAA,UAAU,CAAC,MAAM;AACfd,QAAAA,QAAQ,CAACd,UAAU,CAACiB,GAAG,CAACC,IAAJ,CAASC,OAAV,CAAX,CAAR;AACD,OAFS,EAEP,IAFO,CAAV;AAID,KAlBH,EAmBGC,KAnBH,CAmBUC,GAAD,IAAS;AACdP,MAAAA,QAAQ,CAAChB,QAAQ,CAACuB,GAAG,CAACC,QAAJ,CAAaJ,IAAb,CAAkBC,OAAnB,CAAT,CAAR;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ;AACD,KAtBH;AAuBD,GA1BD;AA2BD,CA5BM,C,CA8BT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport { clearAlerts, setError, setLoading, setSuccess } from \"../alerts/actions\";\nimport { getCategories,clearCategory } from \"../category/actions\";\nimport { getProducts,clearProduct } from \"../product/actions\";\n\n\nexport const changeStatus = (id, status, moduleName) => {\n\n    console.log(status);\n  \n    const fd = new FormData();\n    fd.append(\"status\", status);\n  \n    return (dispatch) => {\n      dispatch(clearCategory());\n      dispatch(clearProduct());\n      dispatch(clearAlerts());\n      axios\n        .patch(`api/${moduleName}/${id}`, fd)\n        .then((res) => {\n          dispatch(setSuccess(res.data.message));\n          console.log(\"RES\", res);\n          // dispatch(getUsers());\n        })\n        .catch((err) => {\n          dispatch(setError(err.response.data.message));\n          console.log(err);\n        });\n    };\n  };\n  \n  export const deleteEntry = (id, setDeletePopup, moduleName,currentPage,perPage) => {\n    return (dispatch) => {\n      dispatch(clearAlerts());\n      dispatch(setLoading(true));\n      axios\n        .delete(`api/${moduleName}/${id}`)\n        .then((res) => {            \n        \n          console.log(\"RES\", res);\n  \n         \n          if(moduleName == 'product'){\n            dispatch(getProducts(currentPage,perPage))\n          }\n          if(moduleName == 'category'){\n            dispatch(getCategories());\n          }\n          setDeletePopup(false);\n          setTimeout(() => {\n            dispatch(setSuccess(res.data.message));\n          }, 1000);\n        \n        })\n        .catch((err) => {\n          dispatch(setError(err.response.data.message));\n          console.log(err);\n        });\n    };\n  };\n\n//   export const deleteEntry = (id, setDeletePopup,currentPage, perPage) => {\n//     return (dispatch) => {\n//       dispatch(clearAlerts());\n//       dispatch(setLoading(true));\n//       axios\n//         .delete(`api/user/${id}`)\n//         .then((res) => {\n//           dispatch(setSuccess(res.data.message));\n//           console.log(\"RES\", res);\n  \n//           dispatch(getUsers(currentPage,perPage));\n//           setDeletePopup(false);\n//         })\n//         .catch((err) => {\n//           dispatch(setError(err.response.data.message));\n//           console.log(err);\n//         });\n//     };\n//   };"]},"metadata":{},"sourceType":"module"}