{"ast":null,"code":"var _jsxFileName = \"/home/cqlnode/Documents/ADMIn/src/pages/Products/Listing/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Row, Col, Card, CardBody, Button, Label, Container } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearProduct, getProducts, setProduct } from \"../../../store/product/actions\";\nimport DataTable from \"react-data-table-component\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport FilterComponent from \"../../../components/DataTables/FilterComponent\";\nimport CustomLoader from \"../../../components/DataTables/CustomLoader\";\nimport Columns from \"./Columns\";\nimport ConfirmDelete from \"../../../components/DataTables/ConfirmDelete\";\nimport { changeStatus, deleteEntry } from \"../../../store/common/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Products = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [filterText, setFilterText] = useState(\"\");\n  const [currentPage, setcurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(10); // PAGINATION\n\n  const handlePageChange = page => {\n    setcurrentPage(page);\n    dispatch(getProducts(page, perPage));\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(getProducts(page, newPerPage));\n  };\n\n  const handleChangeStatus = (id, status) => {\n    console.log(\"ID\", id);\n    console.log(\"HANDLE CHANGE STATUS\", status);\n    dispatch(changeStatus(id, status, \"product\"));\n  };\n\n  const handleDelete = id => {\n    setDeletePopup(true);\n    setDeleteId(id);\n  };\n\n  const confirmDelete = () => {\n    dispatch(deleteEntry(deleteId, setDeletePopup, \"product\", currentPage, perPage));\n  };\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    return /*#__PURE__*/_jsxDEV(FilterComponent, {\n      onFilter: e => setFilterText(e.target.value),\n      filterText: filterText,\n      dispatch: dispatch,\n      title: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }, [filterText]);\n  useEffect(() => {\n    if (filterText) {\n      dispatch(getProducts(1, perPage, filterText));\n    } else {\n      // alert(currentPage);\n      dispatch(getProducts(1, perPage));\n    }\n  }, [filterText]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [deletePopup && /*#__PURE__*/_jsxDEV(ConfirmDelete, {\n      loading: state.alert.loading,\n      confirmDelete: confirmDelete,\n      setDeletePopup: setDeletePopup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-content\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Breadcrumbs, {\n              title: \"Products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n              columns: Columns(handleChangeStatus, handleDelete),\n              data: state.product.products.docs,\n              pagination: true,\n              subHeader: true,\n              subHeaderComponent: subHeaderComponentMemo,\n              progressPending: state.alert.loading,\n              progressComponent: /*#__PURE__*/_jsxDEV(CustomLoader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 36\n              }, this),\n              paginationServer: true,\n              paginationTotalRows: state.user.users.totalDocs,\n              onChangeRowsPerPage: handlePerRowsChange,\n              onChangePage: handlePageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Products, \"J6pQIpeN5vKVhZvPtlFLOPznnIE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Products;\nexport default Products;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/home/cqlnode/Documents/ADMIn/src/pages/Products/Listing/index.jsx"],"names":["React","useState","useEffect","Row","Col","Card","CardBody","Button","Label","Container","useDispatch","useSelector","clearProduct","getProducts","setProduct","DataTable","Breadcrumbs","FilterComponent","CustomLoader","Columns","ConfirmDelete","changeStatus","deleteEntry","Products","dispatch","state","deletePopup","setDeletePopup","deleteId","setDeleteId","filterText","setFilterText","currentPage","setcurrentPage","perPage","setPerPage","handlePageChange","page","handlePerRowsChange","newPerPage","handleChangeStatus","id","status","console","log","handleDelete","confirmDelete","subHeaderComponentMemo","useMemo","e","target","value","alert","loading","product","products","docs","user","users","totalDocs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,QAAzB,EAAmCC,MAAnC,EAA2CC,KAA3C,EAAkDC,SAAlD,QAAmE,YAAnE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,UAApC,QAAsD,gCAAtD;AAEA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,eAAP,MAA4B,gDAA5B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,+BAA1C;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAErB,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,KAAK,GAAGd,WAAW,CAAEc,KAAD,IAAWA,KAAZ,CAAzB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgC1B,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6B,UAAD,EAAaC,aAAb,IAA8B9B,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAAC+B,WAAD,EAAcC,cAAd,IAAgChC,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACiC,OAAD,EAAUC,UAAV,IAAwBlC,QAAQ,CAAC,EAAD,CAAtC,CATqB,CAWrB;;AACA,QAAMmC,gBAAgB,GAAIC,IAAD,IAAU;AACjCJ,IAAAA,cAAc,CAACI,IAAD,CAAd;AACAb,IAAAA,QAAQ,CAACX,WAAW,CAACwB,IAAD,EAAOH,OAAP,CAAZ,CAAR;AACD,GAHD;;AAKA,QAAMI,mBAAmB,GAAG,OAAOC,UAAP,EAAmBF,IAAnB,KAA4B;AACtDb,IAAAA,QAAQ,CAACX,WAAW,CAACwB,IAAD,EAAOE,UAAP,CAAZ,CAAR;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAG,CAACC,EAAD,EAAKC,MAAL,KAAgB;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkBH,EAAlB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,MAApC;AACAlB,IAAAA,QAAQ,CAACH,YAAY,CAACoB,EAAD,EAAKC,MAAL,EAAa,SAAb,CAAb,CAAR;AACD,GAJD;;AAMA,QAAMG,YAAY,GAAIJ,EAAD,IAAQ;AAC3Bd,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,IAAAA,WAAW,CAACY,EAAD,CAAX;AACD,GAHD;;AAKA,QAAMK,aAAa,GAAG,MAAM;AAC1BtB,IAAAA,QAAQ,CACNF,WAAW,CAACM,QAAD,EAAWD,cAAX,EAA2B,SAA3B,EAAsCK,WAAtC,EAAmDE,OAAnD,CADL,CAAR;AAGD,GAJD;;AAMA,QAAMa,sBAAsB,GAAG/C,KAAK,CAACgD,OAAN,CAAc,MAAM;AACjD,wBACE,QAAC,eAAD;AACE,MAAA,QAAQ,EAAGC,CAAD,IAAOlB,aAAa,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CADhC;AAEE,MAAA,UAAU,EAAErB,UAFd;AAGE,MAAA,QAAQ,EAAEN,QAHZ;AAIE,MAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,YADF;AAQD,GAT8B,EAS5B,CAACM,UAAD,CAT4B,CAA/B;AAaA5B,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI4B,UAAJ,EAAgB;AACdN,MAAAA,QAAQ,CAACX,WAAW,CAAC,CAAD,EAAIqB,OAAJ,EAAaJ,UAAb,CAAZ,CAAR;AACD,KAFD,MAEO;AACL;AACAN,MAAAA,QAAQ,CAACX,WAAW,CAAC,CAAD,EAAIqB,OAAJ,CAAZ,CAAR;AACD;AACF,GAPQ,EAON,CAACJ,UAAD,CAPM,CAAT;AASA,sBACE;AAAA,eACGJ,WAAW,iBACV,QAAC,aAAD;AACE,MAAA,OAAO,EAAED,KAAK,CAAC2B,KAAN,CAAYC,OADvB;AAEE,MAAA,aAAa,EAAEP,aAFjB;AAGE,MAAA,cAAc,EAAEnB;AAHlB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA,+BACE,QAAC,GAAD;AAAA,iCACE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,EAAT;AAAA,oCACE,QAAC,WAAD;AAAa,cAAA,KAAK,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AACE,cAAA,OAAO,EAAER,OAAO,CAACqB,kBAAD,EAAqBK,YAArB,CADlB;AAEE,cAAA,IAAI,EAAEpB,KAAK,CAAC6B,OAAN,CAAcC,QAAd,CAAuBC,IAF/B;AAGE,cAAA,UAAU,MAHZ;AAIE,cAAA,SAAS,MAJX;AAKE,cAAA,kBAAkB,EAAET,sBALtB;AAME,cAAA,eAAe,EAAEtB,KAAK,CAAC2B,KAAN,CAAYC,OAN/B;AAOE,cAAA,iBAAiB,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,sBAPrB;AAQE,cAAA,gBAAgB,MARlB;AASE,cAAA,mBAAmB,EAAE5B,KAAK,CAACgC,IAAN,CAAWC,KAAX,CAAiBC,SATxC;AAUE,cAAA,mBAAmB,EAAErB,mBAVvB;AAWE,cAAA,YAAY,EAAEF;AAXhB;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA,kBADF;AAiCD,CA7FD;;GAAMb,Q;UAEab,W,EACHC,W;;;KAHVY,Q;AA+FN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Row, Col, Card, CardBody, Button, Label, Container } from \"reactstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearProduct, getProducts, setProduct } from \"../../../store/product/actions\";\n\nimport DataTable from \"react-data-table-component\";\nimport Breadcrumbs from \"../../../components/Common/Breadcrumb\";\nimport FilterComponent from \"../../../components/DataTables/FilterComponent\";\nimport CustomLoader from \"../../../components/DataTables/CustomLoader\";\nimport Columns from \"./Columns\";\nimport ConfirmDelete from \"../../../components/DataTables/ConfirmDelete\";\nimport { changeStatus, deleteEntry } from \"../../../store/common/actions\";\n\nconst Products = () => {\n\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const [deletePopup, setDeletePopup] = useState(false);\n  const [deleteId, setDeleteId] = useState(\"\");\n  const [filterText, setFilterText] = useState(\"\");\n  const [currentPage, setcurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(10);\n\n  // PAGINATION\n  const handlePageChange = (page) => {\n    setcurrentPage(page);\n    dispatch(getProducts(page, perPage));\n  };\n\n  const handlePerRowsChange = async (newPerPage, page) => {\n    dispatch(getProducts(page, newPerPage));\n  };\n\n  const handleChangeStatus = (id, status) => {\n    console.log(\"ID\", id);\n    console.log(\"HANDLE CHANGE STATUS\", status);\n    dispatch(changeStatus(id, status, \"product\"));\n  };\n\n  const handleDelete = (id) => {\n    setDeletePopup(true);\n    setDeleteId(id);\n  };\n\n  const confirmDelete = () => {\n    dispatch(\n      deleteEntry(deleteId, setDeletePopup, \"product\", currentPage, perPage)\n    );\n  };\n\n  const subHeaderComponentMemo = React.useMemo(() => {\n    return (\n      <FilterComponent\n        onFilter={(e) => setFilterText(e.target.value)}\n        filterText={filterText}\n        dispatch={dispatch}\n        title=\"\"\n      />\n    );\n  }, [filterText]);\n\n  \n\n  useEffect(() => {\n    if (filterText) {\n      dispatch(getProducts(1, perPage, filterText));\n    } else {\n      // alert(currentPage);\n      dispatch(getProducts(1, perPage));\n    }\n  }, [filterText]);\n\n  return (\n    <>\n      {deletePopup && (\n        <ConfirmDelete\n          loading={state.alert.loading}\n          confirmDelete={confirmDelete}\n          setDeletePopup={setDeletePopup}\n        />\n      )}\n      <div className=\"page-content\">\n        <Container fluid>\n          <Row>\n            <Col xs={12}>\n              <Breadcrumbs title=\"Products\" />\n              <DataTable\n                columns={Columns(handleChangeStatus, handleDelete)}\n                data={state.product.products.docs}\n                pagination\n                subHeader\n                subHeaderComponent={subHeaderComponentMemo}\n                progressPending={state.alert.loading}\n                progressComponent={<CustomLoader />}\n                paginationServer\n                paginationTotalRows={state.user.users.totalDocs}\n                onChangeRowsPerPage={handlePerRowsChange}\n                onChangePage={handlePageChange}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </>\n  );\n};\n\nexport default Products;\n"]},"metadata":{},"sourceType":"module"}